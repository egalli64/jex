/*
    Exercism Java track

    Source: https://exercism.org/tracks/java
    My solutions: https://github.com/egalli64/jex
 */
package org.exercism.track;

/**
 * Wizards and Warriors: exercism.org/tracks/java/exercises/wizards-and-warriors
 */
interface Fighter {
    /**
     * Is the fighter more prone to damage?
     *
     * @return true if more vulnerable
     */
    boolean isVulnerable();

    /**
     * Damage generated by the fighter
     *
     * @param fighter the oppenent
     * @return the damage
     */
    int damagePoints(Fighter fighter);
}

class Warrior implements Fighter {
    public static final int LOW_DAMAGE = 6;
    public static final int HIGH_DAMAGE = 10;

    @Override
    public boolean isVulnerable() {
        return false;
    }

    @Override
    public int damagePoints(Fighter wizard) {
        return wizard.isVulnerable() ? HIGH_DAMAGE : LOW_DAMAGE;
    }

    @Override
    public String toString() {
        return "Fighter is a Warrior";
    }
}

class Wizard implements Fighter {
    public static final int LOW_DAMAGE = 3;
    public static final int HIGH_DAMAGE = 12;

    private boolean vulnerable;

    /**
     * Constructor
     * <p>
     * A wizard is by default vulnerable
     */
    public Wizard() {
        this.vulnerable = true;
    }

    @Override
    public boolean isVulnerable() {
        return vulnerable;
    }

    @Override
    public int damagePoints(Fighter warrior) {
        return vulnerable ? LOW_DAMAGE : HIGH_DAMAGE;
    }

    /**
     * Preparing a spell makes the wizard less vulnerable
     */
    public void prepareSpell() {
        vulnerable = false;
    }

    @Override
    public String toString() {
        return "Fighter is a Wizard";
    }
}
